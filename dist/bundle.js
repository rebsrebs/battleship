(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>u});var o=n(81),r=n.n(o),l=n(645),i=n.n(l),a=n(667),s=n.n(a),c=new URL(n(380),n.b),d=new URL(n(672),n.b),A=i()(r()),m=s()(c),p=s()(d);A.push([e.id,":root {\n  --main-bg-color: white;\n  --main-title-color: gray;\n  --message-area-bg-color: white;\n  --button-bg-color: white;\n  --button-border-color: black;\n  --gb-bg-color:white;\n  --gbOne-bg-color: green;\n  --gbTwo-bg-color:blue;\n  /* cells */\n  --cell-plain-bg-color: rgb(163, 230, 245);\n  --cell-hover-bg-color: rgba(9, 116, 140, 0.7);\n  --cell-place-bg-color: rgb(9, 116, 140);\n  --cell-ship-bg-color: red;\n  --cell-hit-ship-bg-color: red;\n  /* I love this below color pink */\n  --cell-sunk-ship-bg-color: rgb(255, 0, 174);\n  --cell-miss-bg-color: gray;\n  --cell-fire-bg-color: rgba(9, 116, 140, 0.4);\n  /* box shadows */\n  --place-here-box-shadow: 0px 0px 30px 0px rgb(255, 68, 0);\n  --fire-here-box-shadow: 0px 0px 30px 0px rgb(255, 68, 0);\n  --subtle-box-shadow: -2px 2px 0px #0d012d25;\n  /* fonts */\n  --sidebar-header-text: 'IBM Plex Mono';\n  --sidebar-small-text: 'IBM Plex Mono';\n  /* --sidebar-small-text: 'Roboto'; */\n  --waters-header-text: 'IBM Plex Mono';\n  --message-area-text: 'IBM Plex Mono';\n  --ns-form-text: 'IBM Plex Mono';\n  --button-text: 'Roboto';\n  /* better divisions */\n  --small-facts-text:'Roboto';\n  --message-text: 'Roboto';\n}\n\n*{\n  margin: 0px;\n  padding: 0px;\n  box-sizing: border-box;\n}\n\n.hidden {\n  display: none;\n}\n\n.shown {\n  visibility: visible;\n}\n\n.flexing {\n  display: flex;\n}\n\n.flexthird {\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n\nh1 {\n  font-size: 60px;\n  margin-bottom: 40px;\n  font-family: 'Bungee';\n  color: var(--main-title-color);\n}\n\nh2 {\n  font-family: var(--waters-header-text);\n  font-size: 28px;\n  color: gray;\n}\n\nh3 {\n  font-family: var(--waters-header-text);\n  font-size: 24px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* ibm-plex-mono-regular - latin */\n@font-face {\n  font-family: 'IBM Plex Mono';\n  font-style: normal;\n  font-weight: 400;\n  src: local(''),\n       url("+m+") format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url("+p+") format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n\nbody {\n  display: grid;\n  grid-template-columns: 350px auto;\n  height: 100vh;\n}\n\n/* SIDEBAR */\n#sidebar {\n  box-sizing: border-box;\n  width: 100%;\n  grid-column: 1 / 2;\n  border-right: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  height: 100%;\n  padding-top: 15px;\n  padding-bottom: 15px;\n}\n\n\n#rulescontainer, #scorecontainer.shown, #colorkeycontainer {\n  width: 80%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 25px;\n  padding-right: 25px;\n  margin-left: 10px;\n}\n\n#gb1-ships {\n  margin-bottom: 20px;\n}\n\nul {\n  margin-left: 15px;\n}\n\nli {\n  margin: 10px 0px 10px 15px;\n  font-size: 18px;\n}\n\n.scoreli, .rulesli, .keydef {\n  font-family: var(--sidebar-small-text);\n  /* font-weight: 400px; */\n}\n\n.rulesli {\n  line-height: 30px;\n}\n\nli.scoreli {\n  list-style-type: none;\n}\n\n\n.sidebarheaderexpands {\n  display: flex;\n  flex-direction: row;\n}\n\n.expandicon {\n  position: relative;\n  top: -3px;\n  left: 5px;\n  cursor: pointer;\n}\n\n#colorkey {\n  grid-template-rows: 40px 40px 40px 40px 40px;\n  grid-template-columns: 40px auto;\n  gap: 10px;\n}\n\n#colorkey.shown {\n  display: grid;\n}\n\n.keysquare {\n  border: black solid 1px;\n}\n\n.keydef {\n  align-self: center;\n  font-size: 18px; \n}\n\n#watersqkey {\n  background-color: var(--cell-plain-bg-color);\n}\n\n#yourshipsqkey {\n  background-color: var(--cell-place-bg-color);\n}\n\n#hitshipsqkey {\n  background-color: var(--cell-hit-ship-bg-color);\n}\n\n#sunkshipsqkey {\n  background-color: var(--cell-sunk-ship-bg-color);\n}\n\n#misssqkey {\n  background-color: var(--cell-miss-bg-color);\n}\n\n.scoresunkship {\n  text-decoration: line-through;\n}\n/* END SIDEBAR */\n\n\n/* BUTTONS */\nbutton.regular {\n  background-color: var(--button-bg-color);\n  border: 1px solid var(--button-border-color);\n  padding: 5px 20px 5px 20px;\n  font-size: 18px;\n  box-shadow: var(--subtle-box-shadow);\n  width: fit-content;\n  font-family: var(--button-text);\n  font-weight: 400px;\n  text-transform: uppercase;\n  cursor: pointer;\n}\n\nbutton.regular:hover {\n  background-color: rgb(244, 236, 237);\n}\n\nbutton.regular:active {\n  background-color: rgb(245, 176, 92);\n}\n/* END BUTTONS */\n\n/* MAIN */\n#main {\n  grid-column: 2 / 3;\n  display: flex;\n  flex-direction: column;\n  /* centers vertically */\n  justify-content: flex-start; \n  align-items: center;\n  background-color: var(--main-bg-color);\n  padding-top: 40px;\n}\n\n#messagearea {\n  box-sizing: content-box;\n  border-radius: 5px;\n  background-color: var(--message-area-bg-color);\n  width: 600px;\n  height: 150px;\n  margin-bottom: 40px;\n  border: 1px solid black;\n}\n\n.message {\n  font-size: 22px;\n  /* font-family: 'IBM Plex Mono';\n  font-style: italic;\n  font-weight: 500; */\n  font-family: 'Roboto';\n  font-style: italic;\n  font-weight: 400;\n}\n\n.smallfacts {\n  font-size: 18px;\n  /* font-family: 'IBM Plex Mono'; */\n  font-family: 'Roboto';\n  font-weight: 400px;\n}\n\n.griditem {\n  display: flex;\n  align-self: center;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  justify-self: center;\n}\n\n.wrappergrid {\n  width: 600px;\n  height: 150px;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 50px 50px 50px;\n}\n\n.griditemtop {\n  grid-row: 1 / 2;\n}\n\n.griditemmiddle {\n  grid-row: 2 / 3;\n}\n\n.griditembottom {\n  grid-row: 3 / 4;\n}\n\n.griditembottomtwo {\n  grid-row: 2 / 4;\n}\n\np.griditem {\n  font-size: 20px;\n}\n\n/* WELCOME FORM */\n#welcomeform {\n  padding-left: 30px;\n  padding-right: 30px;\n}\n\n#welcomeform {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.nsformitem {\n  padding: 10px;\n  margin: 5px;\n  /* font-family: var(--ns-form-text); */\n}\n\ninput.nsformitem {\n  min-width: 80%;\n  padding: 5px;\n  text-align: left;\n  font-family: 'Roboto';\n  font-weight: 400px;\n  font-size: 18px;\n}\n/* END WELCOME FORM */\n\n/* SHIP PLACEMENT */\n#placementwrapper {\n  flex-direction: column;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  justify-items: center;\n  height: 100%;\n}\n\n#toggleicon {\n  position: relative;\n  top: 2px;\n  left: 5px;\n  height: 18px;\n}\n/* END SHIP PLACEMENT */\n\n/* MOVES */\n#movewrapper {\n  flex-direction: column;\n  box-sizing: border-box;\n}\n\n.movetop, .movemiddle, .movebottom {\n  height: 50px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  padding-left: 20px;\n}\n\n.movetop {\n  background-color:rgb(243, 229, 159);\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n}\n\n.movemiddle {\n  background-color:rgb(247, 211, 168);\n}\n\n.movebottom {\n  background-color:rgb(239, 189, 199);\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n}\n\n.movemsg {\n  text-align: left;\n  align-self: left;\n}\n\n.movediv {\n  /* later change width to be responsive */\n  width: 80%;\n  display: flex;\n  align-content: center;\n  justify-content: left;\n}\n/* END MOVES */\n\n/* GAMEBOARD AREA */\n#gameboardrow {\n  display: flex;\n  flex-direction: row;\n  background-color: var(--gb-bg-color);\n}\n\n.gameboardcolumn {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.gameboardcontainer {\n  background-color: var(--gb-bg-color);\n  width: 400px;\n  height: 400px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  border: 1px solid black;\n  margin: 20px;\n}\n\n.cell {\n  border: 1px solid black;\n  background-color: var(--cell-plain-bg-color);\n}\n\n\n.cell-hover {\n  background-color: var(--cell-hover-bg-color);\n}\n\n.cell-placed {\n  background-color: var(--cell-place-bg-color);\n}\n\n.cell-hit-ship {\n  background-color: var(--cell-hit-ship-bg-color);\n}\n\n.cell-sunk-ship {\n  background-color: var(--cell-sunk-ship-bg-color);\n}\n\n.cell-miss {\n  background-color: var(--cell-miss-bg-color);\n}\n\n.cell-fire {\n  background-color: var(--cell-fire-bg-color);\n  transition: transform .2s;  /*Animation */\n  transform: scale(1.1);\n  /* border: 1px solid white; */\n}\n\n.cell-aim {\n  background-color: var(--cell-fire-bg-color);\n}\n\n/* button.cell {\n  padding: 0;\n  margin: 0;\n} */\n\n.crosshair {\n  cursor: crosshair !important;\n}\n\n.placeshipshere {\n  box-shadow: var(--place-here-box-shadow);\n}\n\n.firehere {\n  box-shadow: var(--place-here-box-shadow);\n}\n/* END GAMEBOARD AREA */\n",""]);const u=A},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,l){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);o&&i[d[0]]||(void 0!==l&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=l),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),t.push(d))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},81:e=>{e.exports=function(e){return e[1]}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var l={},i=[],a=0;a<e.length;a++){var s=e[a],c=o.base?s[0]+o.base:s[0],d=l[c]||0,A="".concat(c," ").concat(d);l[c]=d+1;var m=n(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)t[m].references++,t[m].updater(p);else{var u=r(p,o);o.byIndex=a,t.splice(a,0,{identifier:A,updater:u,references:1})}i.push(A)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var l=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<l.length;i++){var a=n(l[i]);t[a].references--}for(var s=o(e,r),c=0;c<l.length;c++){var d=n(l[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}l=s}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var l=n.sourceMap;l&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(l))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},672:e=>{e.exports="data:font/woff;base64,"},380:e=>{e.exports="data:font/woff2;base64,"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var l=t[o]={id:o,exports:{}};return e[o](l,l.exports,n),l.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{const e=(e,t)=>{let n=0;return{name:e,length:t,hit:()=>n+=1,isSunk:()=>n>=t,getHits:()=>n}},t=(t,n)=>{let o=[];for(let e=1;e<11;e++)for(let t=1;t<11;t++)o.push([t,e]);let r=[...o],l=[],i=[],a=0,s=[{ship:e("carrier",5),location:[]},{ship:e("battleship",4),location:[]},{ship:e("destroyer",3),location:[]},{ship:e("submarine",3),location:[]},{ship:e("patrol boat",2),location:[]}];const c=(e,t)=>{for(let n=0;n<s.length;n++){if(null!=s[n].location.find((n=>n[0]===e&&n[1]===t)))return s[n].ship}return""};return{name:t,posessive:n,getCells:()=>o,getMissed:()=>l,receiveAttack:async(e,d)=>{console.log(`${t} is receiving attack at ${e}, ${d}`),await(450,new Promise((e=>setTimeout(e,450)))),console.log("Finished delay.");let A=o.indexOf(o.find((t=>t[0]===e&&t[1]===d))),m=document.getElementById(`${t}-${A}`),p=r.indexOf(o.find((t=>t[0]===e&&t[1]===d)));if(p>=0&&r.splice(p,1),null!=i.find((t=>t[0]===e&&t[1]===d)))return console.log("receiveAttack wrapping up with an already tried spot."),"Already tried this spot.";{const r=[e,d];i.push(r);let A=t.slice(2);if(1==A)var u=2;else 2==A&&(u=1);let p=document.getElementById(`p${u}move`);if(""!=c(e,d)){let r=c(e,d);if(r.hit(),m.classList="cell cell-hit-ship",1==r.isSunk()){a+=1;let e=s.find((e=>e.ship.name===r.name)).location;for(let t=0;t<e.length;t++){let n=e[t][0],r=e[t][1],l=o.indexOf(o.find((e=>e[0]===n&&e[1]===r)));document.getElementById(`gb${A}-${l}`).classList="cell cell-sunk-ship"}p.textContent+=` and sunk ${n} ${r.name}!`,g=t,"patrol boat"===(f=r.name)&&(f="patrolboat"),document.getElementById(`${g}-${f}`).classList.add("scoresunkship")}else p.textContent+=` and hit ${n} ${r.name}.`;return console.log("receiveAttack wrapping up with a hit."),"hit!"}return l.push(r),p.textContent+=" and missed.",m.classList="cell cell-miss",console.log("receiveAttack wrapping up with a miss."),"miss!"}var g,f},getSunk:()=>a,areAllSunk:()=>a>=5?(console.log(`All ${t} ships are sunk.`),!0):(console.log(`Not all ships on ${t} have been sunk yet.`),!1),getPossible:()=>r,getPlacedShips:()=>s,getNumShipsToPlace:()=>5,getFiredShots:()=>i,isThereAShipHere:c}},o=document.getElementById("gbcontainer1"),r=e=>new Promise((t=>setTimeout(t,e))),l=e=>document.getElementById(e),i=l("movewrapper"),a=l("gameoverwrapper"),s=l("gbcontainer1"),c=l("gbcontainer2"),d=(l("gameoverp1"),l("gameoverp2")),A=(l("gameoverp3"),l("p1move")),m=l("p2move"),p=l("moveprompt"),u=l("scorecontainer"),g=(l("playagainbtn"),(e,n)=>{console.log("playGame function has started.");let l={name:e,category:"human",attack:(e,t,n)=>(console.log("human player is attacking and about to call the enemy boards receive attack method."),n.receiveAttack(e,t))},g=(e=>{const t=(e,n=0)=>{if(!(n>e.getPlacedShips().length-1)){let i=e.getPlacedShips()[n];var o=Math.round(Math.random());if(0===o)var r="horizontal";else r="vertical";let a=i.ship.length,s=Math.floor(100*Math.random());if([...e.getCells()[s]][o]+a<=11){var l=[];for(let t=0;t<a;t++)"horizontal"===r?l.push(e.getCells()[Number(s)+Number(t)]):l.push(e.getCells()[Number(s)+10*Number(t)]);for(let o=0;o<a;o++){let r=[...l[o]];if(""!=e.isThereAShipHere(r[0],r[1]))return i.location=[],t(e,n);i.location.push(r)}return t(e,n+=1)}return t(e,n)}console.log("base case - AI ships placed")};return{name:"The Enemy",category:"robot",attack:e=>{console.log("AI is attacking");let t=e.getPossible(),n=e.getCells(),r=o.querySelector(".cell-hit-ship");if(null==r){if(t.length<60){let o=t[Math.floor(Math.random()*t.length)],r=o[0],l=o[1],i=n.indexOf(n.find((e=>e[0]===r&&e[1]===l)));return document.getElementById(`${e.name}-${i}`).classList="cell cell-fire",console.log("AI attack wrapping up, about to call gb1 receieveattack method"),e.receiveAttack(r,l)}{let o="impossible",r="impossible",a="impossible",s="impossible";for(;!("impossible"!==s&&"impossible"!==a||"impossible"!==o&&"impossible"!==r);){let c=t[Math.floor(Math.random()*t.length)],d=Number(n.indexOf(c)),A=+d-10;if(A>=0){let t=`${e.name}-${A}`,n=document.getElementById(t);o=n.classList.contains("cell-miss")&&n.classList.contains("cell-sunk-ship")&&n.classList.contains("cell-hit-ship")?"impossible":"possible"}else o="impossible";let m=+d+10;if(m<100){let t=`${e.name}-${m}`,n=document.getElementById(t);r=n.classList.contains("cell-miss")&&n.classList.contains("cell-sunk-ship")&&n.classList.contains("cell-hit-ship")?"impossible":"possible"}else r="impossible";let p=+d+1;if(console.log(`${p} is gbIdxRight`),p<100)if(n[p][0]===Number(c[0])+1){let t=`${e.name}-${p}`,n=document.getElementById(t);a=n.classList.contains("cell-miss")&&n.classList.contains("cell-sunk-ship")&&n.classList.contains("cell-hit-ship")?"impossible":"possible"}else a="impossible";let u=+d-1;if(u>=0)if(n[u][0]===Number(c[0])-1){let t=`${e.name}-${u}`,n=document.getElementById(t);s=n.classList.contains("cell-miss")&&n.classList.contains("cell-sunk-ship")&&n.classList.contains("cell-hit-ship")?"impossible":"possible"}else s="impossible";var l=c[0],i=c[1]}let c=n.indexOf(n.find((e=>e[0]===l&&e[1]===i)));return console.log(`tarCelNum is ${c}`),document.getElementById(`${e.name}-${c}`).classList="cell cell-fire",console.log(`AI attack wrapping up, about to return otherboard.receiveAttack(${l},${i})`),e.receiveAttack(l,i)}}if(null!=r){let r=Array.from(o.querySelectorAll(".cell-hit-ship")),l="";if(r.length>1){let e=r.map((e=>e.id.slice(4)));l=1===Math.abs(e[0]-e[1])?"horizontal":"vertical"}if("horizontal"===l||""===l){for(let o=0;o<r.length;o++){let l=r[o].id,i=e.getCells()[l.slice(4)],a=Number(i[0]),s=Number(i[1]);if(a+1<11){let o=[a+1,s];if(1==t.some((e=>e[0]===o[0]&&e[1]===o[1]))){let t=n.indexOf(n.find((e=>e[0]===o[0]&&e[1]===o[1])));return document.getElementById(`${e.name}-${t}`).classList="cell cell-fire",console.log(`AI attack wrapping up, about to return otherBoard.receiveAttack(${o[0]}, ${o[1]})`),e.receiveAttack(o[0],o[1])}}if(a-1>0){let o=[a-1,s];if(1==t.some((e=>e[0]===o[0]&&e[1]===o[1]))){let t=n.indexOf(n.find((e=>e[0]===o[0]&&e[1]===o[1])));return document.getElementById(`${e.name}-${t}`).classList="cell cell-fire",console.log(`AI attack wrapping up, about to return otherBoard.receiveAttack(${o[0]}, ${o[1]})`),e.receiveAttack(o[0],o[1])}}}for(let o=0;o<r.length;o++){let l=r[o].id,i=e.getCells()[l.slice(4)],a=Number(i[0]),s=Number(i[1]);if(s+1<11){let o=[a,s+1];if(1==t.some((e=>e[0]===o[0]&&e[1]===o[1]))){let t=n.indexOf(n.find((e=>e[0]===o[0]&&e[1]===o[1])));return document.getElementById(`${e.name}-${t}`).classList="cell cell-fire",console.log(`AI attack wrapping up, about to return otherBoard.receiveAttack(${o[0]}, ${o[1]})`),e.receiveAttack(o[0],o[1])}}if(s-1>0){let o=[a,s-1];if(1==t.some((e=>e[0]===o[0]&&e[1]===o[1]))){let t=n.indexOf(n.find((e=>e[0]===o[0]&&e[1]===o[1])));return document.getElementById(`${e.name}-${t}`).classList="cell cell-fire",console.log(`AI attack wrapping up, about to return otherBoard.receiveAttack(${o[0]}, ${o[1]})`),e.receiveAttack(o[0],o[1])}}}let o=t[Math.floor(Math.random()*t.length)],l=o[0],i=o[1],a=n.indexOf(n.find((e=>e[0]===l&&e[1]===i)));return document.getElementById(`${e.name}-${a}`).classList="cell cell-fire",console.log(`AI attack wrapping up, about to return otherBoard.receiveAttack(${l}, ${i})`),e.receiveAttack(l,i)}{for(let n=0;n<r.length;n++){let o=r[n].id,l=e.getCells()[o.slice(4)],i=Number(l[0]),a=Number(l[1]);if(a+1<11){let n=[i,a+1];if(1==t.some((e=>e[0]===n[0]&&e[1]===n[1])))return console.log(`AI attack wrapping up, about to return otherBoard.receiveAttack(${n[0]}, ${n[1]})`),e.receiveAttack(n[0],n[1])}if(a-1>0){let n=[i,a-1];if(1==t.some((e=>e[0]===n[0]&&e[1]===n[1])))return console.log(`AI attack wrapping up, about to return otherBoard.receiveAttack(${n[0]}, ${n[1]})`),e.receiveAttack(n[0],n[1])}}for(let n=0;n<r.length;n++){let o=r[n].id,l=e.getCells()[o.slice(4)],i=Number(l[0]),a=Number(l[1]);if(i+1<11){let n=[i+1,a];if(1==t.some((e=>e[0]===n[0]&&e[1]===n[1])))return console.log(`AI attack wrapping up, about to return otherBoard.receiveAttack(${n[0]}, ${n[1]})`),e.receiveAttack(n[0],n[1])}if(i-1>0){let n=[i-1,a];if(1==t.some((e=>e[0]===n[0]&&e[1]===n[1])))return console.log(`AI attack wrapping up, about to return otherBoard.receiveAttack(${n[0]}, ${n[1]})`),e.receiveAttack(n[0],n[1])}}let o=t[Math.floor(Math.random()*t.length)],l=o[0],i=o[1],a=n.indexOf(n.find((e=>e[0]===l&&e[1]===i)));return document.getElementById(`${e.name}-${a}`).classList="cell cell-fire",console.log(`AI attack wrapping up, about to return otherBoard.receiveAttack(${l}, ${i})`),e.receiveAttack(l,i)}}},placeAIships:t}})(),f=t("gb2","the enemy's");g.placeAIships(f),u.classList="shown",i.classList="shown",i.setAttribute("display","flex"),p.textContent=`Your move, Admiral ${e}.`;var h="";const b=Array.from(s.querySelectorAll(".cell")),v=Array.from(c.querySelectorAll(".cell"));s.removeAttribute("tabindex"),b.forEach((e=>e.removeAttribute("tabindex"))),b.forEach((e=>e.setAttribute("disabled","true"))),c.setAttribute("tabindex","0"),c.addEventListener("keydown",(function(e){"Enter"===e.key&&e.preventDefault()})),v.forEach((e=>e.addEventListener("keydown",(function(e){"Enter"===e.key&&e.preventDefault()}))));const x=async(t=l,o=f)=>{if(console.log("gameLoop is running."),1==n.areAllSunk())await r(1e3),c.classList.remove("crosshair"),c.removeAttribute("tabindex"),v.forEach((e=>e.removeAttribute("tabindex"))),i.classList="hidden",a.classList="shown wrappergrid",d.textContent="The enemy won!",h="Player 2 wins!",console.log(h);else if(1==f.areAllSunk())await r(1e3),c.classList.remove("crosshair"),i.classList="hidden",a.classList="shown wrappergrid",c.removeAttribute("tabindex"),v.forEach((e=>e.removeAttribute("tabindex"))),d.textContent=`Admiral ${e}'s fleet defeated the enemy!`,h="Player 1 wins!",console.log(h);else if(console.log("not the base case."),"human"===t.category){console.log(`currentPlayer.name is human named ${t.name}`),c.classList.add("crosshair"),c.classList.add("firehere"),v.forEach((e=>e.setAttribute("tabindex","0")));var s=function(e){let t=e.target;t.classList.contains("cell")&&t.classList.add("cell-aim")},u=function(e){let t=e.target;t.classList.contains("cell")&&t.classList.remove("cell-aim")},b=async function(e){console.log("HUMAN ATTACK HANDLER IS RUNNING"),console.log(`currentPlayer.name is ${t.name}`),v.forEach((e=>e.onkeyup=null)),c.removeEventListener("click",b),c.removeEventListener("mouseover",s),c.removeEventListener("mouseout",u),c.classList.remove("crosshair"),c.classList.remove("firehere"),k.textContent="",L.textContent="",I.textContent="",A.textContent="You fired ...";let r=e.target;if(console.log(`target.id is ${r.id}`),console.log(`currentPlayer.name is ${t.name}`),r.classList.contains("cell")){console.log("STEP 8: target classlist DID have cell, about to add cell-fire to classlist"),r.classList.add("cell-fire"),console.log(`currentPlayer.name is ${t.name}`),console.log("STEP 9: about to get relevant coords based on target cell id");var l=r.id.slice(4),i=f.getCells()[l];console.log(`STEP 10: got the coords, about to attack and the currentPlayer should be the human but is actually ${t.name}`);let e=await t.attack(i[0],i[1],o);return console.log(`STEP 11: Got the result from attacking and it is ${e}`),"Already tried this spot."===e?(r.classList.remove("cell-fire"),A.textContent=A.textContent+" false alarm, please fire again.",c.removeEventListener("click",b),c.removeEventListener("mouseover",s),c.removeEventListener("mouseout",u),v.forEach((e=>e.removeAttribute("tabindex"))),v.forEach((e=>e.keyup=null)),c.classList.add("crosshair"),x(t,o)):(console.log("about to switch currentPlayer from human to robot"),t=g,o=n,console.log("the human attackhandler is about to end by calling gameLoop with the AI player as the player."),x(t,o))}};function E(e){if(e.preventDefault,"Enter"===e.key)return e.target.removeEventListener("keyup",E),console.log("Enter was pressed."),e.target.click()}c.addEventListener("mouseover",s),c.addEventListener("mouseout",u),c.addEventListener("click",b),v.forEach((e=>e.addEventListener("keyup",E)))}else if("robot"===t.category)return console.log("currentPlayer.category is robot"),await r(500),m.textContent="The enemy fired ...",await t.attack(o),t=l,o=f,await r(500),p.textContent=`Your move, Admiral ${e}.`,c.classList.add("crosshair"),x(t,o)};return x(),h}),f=e=>document.getElementById(e),h=f("welcomeform"),b=f("placementwrapper"),v=f("placemessage"),x=f("gbcontainer1"),E=f("gbcontainer2"),y=f("togglebtn"),w=f("direction"),k=f("p1move"),L=f("p2move"),I=f("moveprompt"),C=f("messagearea"),N=f("playagainbtn"),B=f("colorkeyexpandicon"),K=f("rulesexpandicon");function M(e){let t=e.target.getAttribute("aria-expanded"),n=e.target.getAttribute("aria-controls"),o=document.getElementById(n);"false"===t?(e.target.setAttribute("aria-expanded","true"),e.target.setAttribute("src","../src/images/minus-square.svg"),e.target.setAttribute("title","hide"),o.classList="shown"):(e.target.setAttribute("aria-expanded","false"),e.target.setAttribute("src","../src/images/plus-square.svg"),e.target.setAttribute("title","expand"),o.classList="hidden")}function T(e,t,n=0){if(n>t.getPlacedShips().length-1)return console.log("base case - human ships placed"),b.classList="hidden",x.classList.remove("placeshipshere"),void g(e,t);{let i=t.getPlacedShips()[n];v.textContent=`Admiral ${e}, please place your ${i.ship.name}.`;var o=function(e){let n=e.target;if(n.classList.contains("cell")){var o=n.id.slice(4),r=t.getCells()[o];let e,l=i.ship.length,a=w.getAttribute("data-status");if(e="horizontal"===a?0:1,r[e]+l<=11)for(let e=0;e<l;e++)if("horizontal"===a){let n=document.getElementById(`${t.name}-${Number(o)+Number(e)}`);n.classList.contains("cell-placed")||(n.classList="cell cell-hover")}else if("vertical"===a){let n=document.getElementById(`${t.name}-${Number(o)+10*Number(e)}`);n.classList.contains("cell-placed")||(n.classList="cell cell-hover")}}},r=function(e){let n=e.target;if(n.classList.contains("cell")){var o=n.id.slice(4),r=t.getCells()[o];let e,l=i.ship.length,a=w.getAttribute("data-status");if(e="horizontal"===a?0:1,r[e]+l<=11)for(let e=0;e<l;e++)if("horizontal"===a){let n=document.getElementById(`${t.name}-${Number(o)+Number(e)}`);n.classList.contains("cell-hover")&&n.classList.remove("cell-hover")}else if("vertical"===a){let n=document.getElementById(`${t.name}-${Number(o)+10*Number(e)}`);n.classList.contains("cell-hover")&&n.classList.remove("cell-hover")}}},l=function(a){let s=a.target;if(s.classList.contains("cell")){var c=s.id.slice(4),d=t.getCells()[c];let a,A=i.ship.length,m=w.getAttribute("data-status");if(a="horizontal"===m?0:1,d[a]+A<=11){let a=[];for(let e=0;e<A;e++)"horizontal"===m?a.push(t.getCells()[Number(c)+Number(e)]):a.push(t.getCells()[Number(c)+10*Number(e)]);for(let e=0;e<A;e++)if(""!=t.isThereAShipHere(a[e][0],a[e][1]))return;for(let e=0;e<A;e++)if("horizontal"===m){f(`gb1-${Number(c)+e}`).classList="cell cell-placed";let t=[Number(d[0])+Number(e),d[1]];i.location.push(t)}else if("vertical"===m){document.getElementById(`gb1-${Number(c)+10*e}`).classList="cell cell-placed";let t=[d[0],Number(d[1])+Number(e)];i.location.push(t)}return n+=1,console.log(`This many ships have been placed: ${n}`),x.removeEventListener("click",l),x.removeEventListener("mouseover",o),x.removeEventListener("mouseout",r),T(e,t,n)}}};x.addEventListener("click",l),x.addEventListener("mouseout",r),x.addEventListener("mouseover",o)}}B.addEventListener("click",M),K.addEventListener("click",M),y.addEventListener("click",(function(){"horizontal"===w.getAttribute("data-status")?(w.setAttribute("data-status","vertical"),w.textContent="vertical"):(w.setAttribute("data-status","horizontal"),w.textContent="horizontal")})),N.addEventListener("click",(function(){console.log("Play again button was clicked.")}));var D=n(379),S=n.n(D),G=n(795),H=n.n(G),O=n(569),W=n.n(O),Y=n(565),F=n.n(Y),R=n(216),j=n.n(R),Q=n(589),P=n.n(Q),Z=n(426),V={};V.styleTagTransform=P(),V.setAttributes=F(),V.insert=W().bind(null,"head"),V.domAPI=H(),V.insertStyleElement=j(),S()(Z.Z,V),Z.Z&&Z.Z.locals&&Z.Z.locals,(()=>{for(let t=0;t<100;t++)(e=document.createElement("div")).className="cell cell-plain",e.id=`gb1-${t}`,e.setAttribute("tabindex","0"),x.appendChild(e);for(let t=0;t<100;t++){var e;(e=document.createElement("div")).className="cell cell-plain",e.id=`gb2-${t}`,E.appendChild(e)}})(),f("namebtn").addEventListener("click",(function(){C.classList.remove("firehere");const e=f("p1name").value;h.classList="hidden",h.remove(),b.classList="shown flexing";let n=t("gb1","your");x.classList.add("placeshipshere"),T(e,n)}))})()})();